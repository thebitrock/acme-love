name: CI & Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Test (${{ matrix.node }} â€¢ ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-15, windows-latest]
        node: ['20.18.1', '21.x', '22.x']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Force LF checkout on Windows
        if: runner.os == 'Windows'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install
        run: npm ci

      - name: Build (POSIX only)
        if: runner.os != 'Windows'
        run: npm run build

      - name: Lint
        run: npm run lint:check

      - name: Test
        run: npm test

  release:
    name: Release (semantic-release)
    needs: [test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: false

    env:
      NPM_CONFIG_PROVENANCE: true
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Install
        run: npm ci

      - name: Sanity check npm auth
        run: |
          npm config get registry
          npm whoami

      - name: Build
        run: npm run build

      - name: Release (semantic-release)
        run: npx --no-install semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
