name: 🔄 CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [published]

jobs:
  lint-and-format:
    name: 🔍 Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint:check

      - name: 🎨 Check Prettier formatting
        run: npm run format:check

  test:
    name: 🧪 Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ['20.18.1', '21.x', '22.x']

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🧪 Run unit tests
        run: npm run test:unit

      - name: 📊 Run coverage tests
        run: npm run test:coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.18.1'

      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.18.1'
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  security:
    name: 🔐 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run security audit
        run: npm audit --audit-level=moderate

      - name: 🔐 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  package-test:
    name: 📦 Package Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for production
        run: npm run build:prod

      - name: 🏗️ Postbuild for production
        run: npm run postbuild

      - name: 📦 Test package creation
        run: npm pack --dry-run

      - name: 🔍 Verify package contents
        run: |
          npm pack
          tar -tzf acme-love-*.tgz | head -20

  publish:
    name: 📤 Publish to NPM
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, security, package-test]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for production
        run: npm run build:prod

      - name: 🧪 Run final tests
        run: npm test

      - name: 📤 Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📋 Create Release Summary
        run: |
          echo "## 🎉 Release Published" >> $GITHUB_STEP_SUMMARY
          echo "Package **acme-love@${{ github.ref_name }}** has been published to NPM!" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Installation" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "npm install -g acme-love@${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
